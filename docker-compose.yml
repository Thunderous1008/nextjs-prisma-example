services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=mongodb://mongo:27017/users_management?replicaSet=rs0
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - .:/app
    command: /bin/sh -c "sleep 10 && npm run dev"
    networks:
      - mongo-network 

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: bash -c "mongod --replSet rs0 --bind_ip_all && sleep 5 && mongosh --eval 'rs.initiate()'"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "rs.status().ok"]
      interval: 15s
      retries: 10
    networks:
      - mongo-network 
volumes:
  mongo-data:

networks:
  mongo-network:
    driver: bridge
